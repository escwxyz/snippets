{
  "Vitest source test": {
    "prefix": "vitest",
    "body": [
      "if (import.meta.vitest) {",
      "\tconst { test, expect } = import.meta.vitest",
      "\ttest('test one', () => {",
      "\t\texpect().toBe()",
      "\t})",
      "}"
    ],
    "description": "Vitest source test"
  },
  "Import external module.": {
    "prefix": "import statement",
    "body": ["import { $0 } from \"${1:module}\";"],
    "description": "Import external module."
  },
  "Export function": {
    "prefix": "exf",
    "body": [
      "export const ${1:name} = (${2:params}:${3:type}) : ${4:return} => {",
      "\t$0",
      "}"
    ],
    "description": "export arrow function"
  },
  "If Statement": {
    "prefix": "if",
    "body": ["if (${1:condition}) {", "\t$0", "}"],
    "description": "If Statement"
  },
  "Switch Statement": {
    "prefix": "switch",
    "body": [
      "switch (${1:key}) {",
      "\tcase ${2:value}:",
      "\t\t$0",
      "\t\tbreak;",
      "",
      "\tdefault:",
      "\t\tbreak;",
      "}"
    ],
    "description": "Switch Statement"
  },
  "While Statement": {
    "prefix": "while",
    "body": ["while (${1:condition}) {", "\t$0", "}"],
    "description": "While Statement"
  },
  "Try-Catch Statement": {
    "prefix": "trycatch",
    "body": ["try {", "\t$0", "} catch (${1:error}) {", "\t", "}"],
    "description": "Try-Catch Statement"
  },
  "Set Timeout Function": {
    "prefix": "settimeout",
    "body": ["setTimeout(() => {", "\t$0", "}, ${1:timeout});"],
    "description": "Set Timeout Function"
  }
}
